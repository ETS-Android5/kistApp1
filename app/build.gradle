plugins {
    id 'com.android.application'
    id 'com.google.protobuf'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.kist.kistapp1"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


repositories {
    maven {
        url {
            //mqtt client 관련
  //          "https://repo.eclipse.org/content/repositories/paho-releases/"
            //firefox의 geckoView사용을 위함
            "https://maven.mozilla.org/maven2/"
        }
    }
}

dependencies {
    // temi robot
    implementation 'com.robotemi:sdk:0.10.77'

<<<<<<< HEAD
    implementation 'org.tensorflow:tensorflow-lite:2.2.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.2.0'

=======
>>>>>>> 368c839c7c3f3b692964c135cace4e36f537832e
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation files('libs/EmotionalBehaviorExpression.jar')
    implementation 'androidx.test:monitor:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // https://github.com/GoogleCloudPlatform/android-docs-samples/blob/master/speech/Speech/app/build.gradle
    // stt gRPC
    implementation "io.grpc:grpc-okhttp:1.4.0"
    implementation "io.grpc:grpc-protobuf-lite:1.4.0"
    implementation "io.grpc:grpc-stub:1.4.0"
    implementation 'javax.annotation:javax.annotation-api:1.2'

    protobuf 'com.google.protobuf:protobuf-java:3.3.1'

    // OAuth2 for Google API
    implementation ('com.google.auth:google-auth-library-oauth2-http:0.20.0') {
        exclude module: 'httpclient'
    }

    // MQTT
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation ('org.eclipse.paho:org.eclipse.paho.android.service:1.1.1') {
        exclude module: 'support-v4'
    }
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    //firefox의 geckoView사용을 위함
    implementation "org.mozilla.geckoview:geckoview-nightly:83.0.20200922094538"

    // speak gesture
    implementation 'javax.xml.stream:stax-api:1.0'
    implementation 'com.fasterxml:aalto-xml:1.2.2'

    // lg - recordingall
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.4.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}
